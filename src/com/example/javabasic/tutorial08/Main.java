package com.example.javabasic.tutorial08;

public class Main {
    public static void main(String[] arags) {
        System.out.println("과제 수행");
    }
}
/* 지금까지 코드 내용 요약 */
// 1. 개발환경 설치(java는 주로 intelliJ or eclipse), 이클립스는 JDK로써 대표적인 개발환경입니다. 이클립스를 이용하면 JSP, Java Swing부터 시작해 다양한 자바 개발을 시작할 수 있습니다.

// 2. 변수: 변수는 그 내부에 있는 값을 프로그램이 실행되는 도중에 언제든지 교체할 수 있습니다. 하지만 상수는 한 번 설정되면 프로그램이 종료될 때까지 변경되지 않는 데이터라고 할 수 있습니다.

// 3. 자료형: 일반적인 프로그래밍 언어에는 정수 자료형 int, 실수 자료형 float과 double, 문자 자료형 char, 문자열 자료형 String이 사용됩니다. 자바에서는 특히 String을 많이 사용합니다.
// **원시 타입과 참조 타입에 대한 설명**
// 자바에서는 데이터를 처리하기 위해 두 종류의 데이터 타입을 사용합니다.
// 원시(primitive) 타입과 참조(reference, 비원시적) 타입입니다.
// 이 중에서도 문자열을 다루는 String 클래스는 참조 타입에 속하지만, 즉 비원시적 타입에 속하지만, 원시 타입과 비슷한 동작을 보이는 특별한 경우로 분류됩니다.
// 1. 원시(primitive) 타입 :
// ● 원시 타입은 기본적인 데이터 유형으로, 메모리에 직접 값을 저장합니다.
// ● int, double, float, char, boolean 등이 원시 타입의 예입니다.
// ● 원시 타입 변수는 실제 값을 저장하므로 연산과 계산이 빠르며 메모리 사용이 효율적입니다.
// 2. 참조(reference) 타입 :
// ● 참조 타입은 객체의 주소를 가리키는 변수입니다. 실제 데이터는 힙(heap) 메모리에 저장됩니다.
// ● String 클래스도 참조 타입에 속합니다.
// ● 객체지향 프로그래밍의 핵심인 클래스와 객체를 생성하고 사용할 때 사용됩니다.
// ● 참조 타입 예시입니다. 참조타입은 예를 들어서 String a = "민영"; 이렇게 코드를 작성한다면 => 실제 값은 heap 메모리에 저장되고 즉 민영은 힙 메모리에 저장되고 a 변수는 heap 메모리의 주소를 가리킵니다.

// 4. 연산자
// 연산자는 >, <, ==, ++ 등의 다양한 형태로 다수의 데이터를 비교하거나 데이터를 변경할 수 있게 합니다. 특히 &&와 ||는 AND, OR 연산으로써 조건문과 반복문에서도 많이 사용됩니다.

// 5. 조건문 & 반복문 => 알고리즘 그 자체라고 할 수 있음
// 조건문과 반복문은 프로그래밍의 논리적 흐름에 있어 가장 중요한 부분입니다. 여러 개의 데이터를 서로 비교하거나 1부터 100까지 반복하는 등 다양한 논리적 흐름에 따라 프로그램을 전개할 수 있도록 해줍니다.

// 6. 기본 입출력
// 자바에서는 입력을 받을 때 기본적으로 Scanner 클래스를 가장 많이 활용합니다. Scanner 클래스는 정수를 입력 받는 nextInt(), 문자열을 입력 받는 next() 등 다양한 함수를 지원합니다.
